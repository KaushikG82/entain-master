syntax = "proto3";
package sport;

option go_package = "/sport";

import "google/protobuf/timestamp.proto";

service Sport {
  // ListEvents will return a collection of all sports.
  rpc ListEvents(ListEventRequest) returns (ListEventsResponse) {}
}

//Request and Reponse Messages

message ListEventRequest {
  ListEventsRequestFilter filter = 1;
}

// Response to ListEvents call.
message ListEventsResponse {
  repeated Event events = 1;
}

// Filter for listing events.
message ListEventsRequestFilter {
  repeated int64 ids = 1;
}

/* Resources */

// A event resource.
message Event {
  // ID represents a unique identifier for the sport event.
  int64 id = 1;
  // Name is the official name given to the event.
  string name = 2;
  // AdvertisedStartTime is the time the sport is advertised to run.
  google.protobuf.Timestamp advertised_start_time = 3;
  // EventStartTime is the time the sport starts.
  google.protobuf.Timestamp event_start_time = 4;
  // EventEndTime is the time the sport will end.
  google.protobuf.Timestamp event_end_time = 5;
}
